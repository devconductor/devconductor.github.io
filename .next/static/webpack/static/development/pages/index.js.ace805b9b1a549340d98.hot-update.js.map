{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ace805b9b1a549340d98.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Head from 'next/head'\r\nimport Router from 'next/router'\r\nimport ScrollAnimation from 'react-animate-on-scroll'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Grid, Avatar } from '@material-ui/core'\r\nimport Section from '../components/section'\r\nimport MiniSection from './../components/mini-section'\r\nimport Calendar from '../components/calendar'\r\nimport Header from './../components/header'\r\nimport ImageGridList from '../components/image-grid-list'\r\nimport Footer from '../components/footer'\r\nimport AnimatedText from '../components/animated-text'\r\nimport AnimatedNumber from './../components/animated-number'\r\n\r\nimport site from '../utils/config'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: 10,\r\n      paddingBottom: 30\r\n    },\r\n    bigAvatar: {\r\n        margin: '20px auto !important',\r\n        width: 150,\r\n        height: 150,\r\n    }\r\n  });\r\n  \r\n\r\nclass Index extends React.Component {\r\n\r\n    state = {\r\n        canAnimatedNumbers: false\r\n    }\r\n\r\n    enableAnimatedNumbers = () => {\r\n        this.setState({ ...this.state, canAnimatedNumbers: true })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>{site.title}</title>\r\n                </Head>\r\n                <Header />\r\n                <Section title={<img className=\"logo\" src={site.logo} />}\r\n                    backgroundImage={`url('/static/img/section-background/background-banner.JPG')`}\r\n                    backdrop alignCenter firstSection>\r\n                    <Calendar dateStartEvent={site.dateEventStart} dateFinishEvent={site.dateEventFinish}/>\r\n                    <br/>\r\n                    <button className=\"large\" onClick={() => { Router.push('/hackathon') }}>Veja mais!</button>\r\n                </Section>\r\n                <MiniSection title={site.about.title}> \r\n                    <div className={classes.root}>\r\n                        <br/><br/>\r\n                        <Grid container spacing={16} className=\"about-geek\">\r\n                            {\r\n                                site.about.features.map((feature, index) => {\r\n                                    return <Grid item sm={4} xs={12} key={index}>\r\n                                        <ScrollAnimation animateIn=\"fadeInUp\" animateOnce delay={index * 200}>\r\n                                            <label>{feature.title}</label>\r\n                                            <Avatar color=\"3e3e3e\" className={classes.bigAvatar} src={feature.img}/>    \r\n                                            <p>\r\n                                                {feature.description}\r\n                                            </p>\r\n                                        </ScrollAnimation>\r\n                                    </Grid>        \r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    </div>\r\n                </MiniSection>\r\n                <MiniSection alignCenter backgroundImage={`url('/static/img/section-background/noc.png')`}>\r\n                    <ScrollAnimation animateIn=\"pulse\" duration={2}><img src=\"/static/img/icons/twitter-white.png\" alt=\"twitter\"/><br/></ScrollAnimation>\r\n                    <h1 className=\"follow-twitter\">Siga a hashtag <a href=\"https://twitter.com/search?q=%23GeekForAWeek\" target=\"_blank\">\r\n                            <AnimatedText text={site.hashtag} className=\"text-styled\"/>\r\n                        </a>\r\n                    </h1>\r\n                </MiniSection>\r\n                <Section title={site.enterpriseGallery.title} alignCenter>\r\n                    <br/>\r\n                    <ImageGridList />\r\n                </Section>\r\n                <MiniSection backgroundImage={`url('/static/img/section-background/geeks.png')`} alignCenter>\r\n                    <Grid container spacing={8} alignItems=\"center\" justify=\"space-evenly\">\r\n                        {site.about.numbersEnterprise.map((numberEnterprise, index) => {\r\n                            return (\r\n                                <div className=\"info-metas\" key={index}>\r\n                                    <ScrollAnimation animateIn=\"slideInUp\" animateOnce afterAnimatedIn={index === 0 && this.enableAnimatedNumbers}>\r\n                                        <div className=\"number\"><AnimatedNumber number={numberEnterprise.number} startAnimation={this.state.canAnimatedNumbers}/>+</div>\r\n                                        <div className=\"unit\">{numberEnterprise.unit}</div>\r\n                                        <div className=\"description\">{numberEnterprise.description}</div>\r\n                                    </ScrollAnimation>\r\n                                </div>\r\n                            )    \r\n                        })}\r\n                    </Grid>\r\n                </MiniSection>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nexport default withStyles(styles)(Index)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5EA;AACA;AA+EA;;;;A","sourceRoot":""}