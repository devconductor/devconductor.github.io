{"version":3,"file":"static/webpack/static\\development\\pages\\hackathon.js.7cdca0f0d6d405a66019.hot-update.js","sources":["webpack:///./pages/hackathon.js"],"sourcesContent":["import Head from 'next/head'\r\nimport ScrollAnimation from 'react-animate-on-scroll'\r\nimport Section from \"../components/section\"\r\nimport Header from \"../components/header\"\r\nimport MiniSection from \"../components/mini-section\"\r\nimport Footer from '../components/footer'\r\nimport site from '../utils/config'\r\nimport { timeUtils } from '../utils/time'\r\n\r\nclass Hackathon extends React.Component {\r\n\r\n    render() {\r\n\r\n        const registrationStarted = timeUtils.todayIsLessThanDateCompare(site.dateRegistrationStart)\r\n        const registrationFinish = timeUtils.todayIsLessThanDateCompare(site.dateRegistrationFinish)\r\n\r\n        let title = ''\r\n\r\n        // if (registrationStarted) {\r\n        //     title = `Inscrições a partir de ${timeUtils.convertDate(site.dateRegistrationStart)}`\r\n        // }\r\n\r\n        if (!registrationStarted) {\r\n            title = 'Inscrições abertas!'\r\n        }\r\n\r\n        if (!registrationFinish) {\r\n            title = 'Inscrições encerradas!'\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>Geek for a Week</title>\r\n                </Head>\r\n                <Header/>\r\n                <Section firstSection alignCenter title={<img className=\"logo\" src={site.logo} />}\r\n                    backgroundImage={`url('/static/img/section-background/background-banner-2.JPG')`}>\r\n                    <h1>{site.dateEventDetail}</h1>\r\n                </Section>\r\n                <MiniSection title={title}>\r\n                    <br/>\r\n                    {\r\n                        registrationStarted &&\r\n                        <React.Fragment>\r\n                            <h1>{`Inscrições a partir de ${timeUtils.convertDate(site.dateRegistrationStart)}`}</h1>\r\n                            <br/>\r\n                        </React.Fragment>\r\n                    }\r\n                    <div className=\"bt-central\">\r\n                        <a href={site.hackathon.regulation} target=\"_blank\"><button className=\"large\">Regulamento</button></a>\r\n                        {\r\n                            !registrationStarted && registrationFinish &&\r\n                            <a href={site.hackathon.linkRegistration} target=\"_blank\"><button className=\"large\">Inscreva-se</button></a>\r\n                        }\r\n                    </div>\r\n                    <div className=\"event-details\">\r\n                        { \r\n                            site.hackathon.details.map((detail, index) => {\r\n                                return (\r\n                                    <React.Fragment key={index}>\r\n                                        <h2>{detail.title}</h2>\r\n                                        <p>{detail.description}</p>\r\n                                        <ul>\r\n                                            {\r\n                                                detail.topics.map((topic, index) => <li key={index}>{topic}</li>)\r\n                                            }\r\n                                        </ul>\r\n                                        <br/><br/>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })\r\n                        }\r\n                        <h2>Quer participar como voluntário?</h2>\r\n                        <button><a style={{ textDecoration: 'none' }} href={site.hackathon.linkVolunteers} target=\"_blank\">Clique aqui</a></button>\r\n                    </div>\r\n                </MiniSection>\r\n                <MiniSection title=\"Premiação\" alignCenter>\r\n                    <div className=\"awards\">\r\n                        {\r\n                            site.hackathon.awards.map((award, index) => {\r\n                                return (\r\n                                    <div className=\"award\" key={index}>\r\n                                        <ScrollAnimation animateIn=\"tada\" animateOnce delay={index * 500}>\r\n                                            <img src=\"/static/img/icons/money.png\" width=\"180\"/>\r\n                                            <h2>{award.title}</h2>\r\n                                            <p>{award.award}</p>\r\n                                        </ScrollAnimation>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </MiniSection>\r\n                <MiniSection title=\"Jurados\" alignCenter backgroundImage={`url('/static/img/section-background/judges.png')`}>\r\n                    <div className=\"judges\">\r\n                        {\r\n                            site.hackathon.judges.map((judges, index) => {\r\n                                return (\r\n                                    <div className=\"judge\" key={index}>\r\n                                        <ScrollAnimation animateIn=\"fadeInLeftBig\" animateOnce delay={index * 200}>\r\n                                            <img src={judges.img} />\r\n                                            <h2>{judges.name}</h2>\r\n                                        </ScrollAnimation>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </MiniSection>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hackathon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxGA;AACA;AA0GA;;;;A","sourceRoot":""}